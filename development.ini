###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/environment.html
###

[app:testscaffold]
use = egg:testscaffold

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
;pyramid.includes =
;    pyramid_debugtoolbar

sqlalchemy.url = postgresql://test:test@127.0.0.1:5432/testscaffold

ziggurat_foundations.model_locations.User = testscaffold.models.user:User
ziggurat_foundations.session_provider_callable = testscaffold.util:session_provider

# will be used for mailing and tasks to generate url
base_url = http://localhost:6543


###
# Security
###

auth_tkt.seed = AUTHTKT_SECRET

# generate this for production with
# from cryptography.fernet import Fernet
# key = Fernet.generate_key()
encryption_secret = 'U0VDUkVUU0VDUkVUU0VDUkVUU0VDUkVUU0VDUkVUPT0='

###
# mail config
###
mailing.from_name = Developer
mailing.from_email = testing@localhost

#
# you can supply a redis connection string as a URL
redis.dogpile.url = redis://localhost:6379/0

# session settings
redis.sessions.secret = REDIS_SESSION_SECRET
redis.sessions.timeout = 86400

# session cookie settings
redis.sessions.cookie_name = testscaffold
redis.sessions.cookie_max_age = 8640000
redis.sessions.cookie_path = /
redis.sessions.cookie_domain =
redis.sessions.cookie_secure = False
redis.sessions.cookie_httponly = False
redis.sessions.cookie_on_exception = True

# you can supply a redis connection string as a URL
redis.sessions.url = redis://localhost:6379/0

# you can specify a prefix to be used with session keys in redis
redis.sessions.prefix = testscaffold

###
# Celery
###
celery.concurrency = 4
celery.broker_url = redis://localhost:6379/1
celery.timezone = UTC

###
# Authomatic configuration
###

authomatic.secret = some random string
authomatic.pr.facebook.app_id = 526658280805448
authomatic.pr.facebook.secret = 863ff8527731fcf54dc763fbb806851f
authomatic.pr.twitter.key = 8aMHhkEP6PsMUosm14fDWxNXa
authomatic.pr.twitter.secret = 11Mev6GQeG8bs74APdwI6wmkuqTKZMGRw5sanZIstk4e2045a4
authomatic.pr.google.key = 815021943708-cpgpi4sqh5ll7kjbn4rjrjl8qlqedjg1.apps.googleusercontent.com
authomatic.pr.google.secret = oFLkbzLijO2bdIXwmoqCqmp8


[filter:appenlight_client]
use = egg:appenlight_client
appenlight.api_key = e29992e0d4494829a189eb0d4397dfcb


[pipeline:main]
pipeline =
    appenlight_client
    testscaffold


###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/logging.html
###

[loggers]
keys = root, testscaffold, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_testscaffold]
level = DEBUG
handlers =
qualname = testscaffold

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
