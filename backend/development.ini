###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/environment.html
###

[app:testscaffold]
use = call:testscaffold:main

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar

sqlalchemy.url = postgresql://test:test@db:5432/test
sqlalchemy.echo = false

ziggurat_foundations.model_locations.User = testscaffold.models.user:User
ziggurat_foundations.session_provider_callable = testscaffold.util:session_provider

# will be used for mailing and tasks to generate url
base_url = http://localhost:6543

###
# :anguages
###

available_languages = en pl

###
# Security
###

auth_tkt.seed = AUTHTKT_SECRET

# generate this for production with
# from cryptography.fernet import Fernet
# key = Fernet.generate_key()
encryption_secret = 'U0VDUkVUU0VDUkVUU0VDUkVUU0VDUkVUU0VDUkVUPT0='

###
# mail config
###

mailing.from_name = Developer
mailing.from_email = testing@localhost

###
# you can supply a redis connection string as a URL
###
redis.dogpile.url = redis://redis:6379/0

##
# session settings
##

beaker.session.type = ext:redis
beaker.session.url = redis://redis:6379/2
beaker.session.key = testscaffold_session
beaker.session.secret = REMOVED
beaker.session.encrypt_key = REMOVED
beaker.session.validate_key = REMOVED

###
# Celery
###
celery.concurrency = 4
celery.broker_url = amqp://test:test@rabbitmq:5672/test
celery.timezone = UTC


###
# StatsD
monitoring.statsd = statsd:9125
###

###
# Sentry
sentry.dsn =
###

###
# Authomatic configuration
###

authomatic.secret = some random string
authomatic.pr.facebook.app_id =
authomatic.pr.facebook.secret =
authomatic.pr.twitter.key =
authomatic.pr.twitter.secret =
authomatic.pr.google.key =
authomatic.pr.google.secret =

[alembic]
# path to migration scripts
script_location = testscaffold/migrations
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev)s
# file_template = %%(rev)s_%%(slug)s

[pipeline:main]
pipeline =
    testscaffold


###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/logging.html
###

[loggers]
keys = root, testscaffold, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic, json

[logger_root]
level = INFO
handlers = console

[logger_testscaffold]
level = DEBUG
handlers =
qualname = testscaffold

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = json

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s

# json string will land as "message" key of format string
[formatter_json]
class=testscaffold.util.logging.JSONFormatter
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
